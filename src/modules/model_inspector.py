# (((((((((((((##########%%%#((((((((((((((((((((((((((((((((((((((((##%%%%%%%%%%###%#/,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
# (((((((((((((((((##########%%%##(((((((((((((((((((((((((((((##%%%%%%%%%%####(*,........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
# (((((((((((((((((((((((#########%%%%&&&&%#(((((((((##%&&&&&&%%%%%%##%##/,,,..,...,,,.......,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
# ((((((((((((((((((((((((((((#&@#((/((((((((((((((((((((((((((((#@%...,,,,...................,,,,,,,,,,,,,,,,,,,,,,,,,,,,
# (((((((((((((((((((((((((%@(((((((((((((((((((((((((((((((((((((((((#&&*...................,..,,,,,,,,,,,,,,,,,,,,,,,,,,
# ((((((((((((((((((((#((&#((((((((((((((((((((((((((((((((((((((((((((((((%&/..,.,...............,,,,,,,,,,,,,,,,,,,,,,,,
# %%%#(((((((((((((((((&(((((((((((((((((((((((((((((((((((((((((((((((((((((((&#,...,.............,,,,,,,,,,,,,,,,,,,,,,,
# ####%%###((((((((((%%((((((((((((((((((((((((((/((((((((((((((((((((((((((((((((%#,..,,........,...,,,,,,,,,,,,,,,,,,,,,
# ((#######%%%##(((#&#((((((((((((((((((((((((/((//((((((((((((((((((((((((((((((((((&/................,,,,,,,,,,,,,,,,,,,
# ((((((#####%%%%%%&#((((((((((((((((((((((##//*///(%((((((((((((((((((((((((((((((((((%%////*.....,....,,,,,,,,,,,,,,,,,,
# ((((##%%%%%%%%%%&%((((((((((((((((((((((#///%(*////*#((((((((#(((((((((((((((((((((((((#%(((((%&*.,..,..,,,,,,,,,,,,,,,,
# %%%%%%##%#(/,.,.%((((((((((((((((((((((#*/((#&(//*/*/%(((((((/(%#(((((((((((((((((((((((((%(((((%(.,......,,,,,,,,,,,,,,
# %%##/....,,....,%((((((((((((((((((((((%**/AISHIELD*/#((((((((((/(%#(((((((((((((((((((((((((((((&.,.......,,,,,,,,,,,,,
# ................/&((((((((((&(/(((((((((#(*/(((/(**(#(((((((((((((((((%#((((((((((((((((((((((((&*.,,........,,,,,,,,,,,
# ................./#(((((((((/%((((((((((/(((#%%%##(((((((((((((((((((((((((%%#/(((((((((((((((&(..,..........,,,,,,,,,,,
# ................,.*@((((((((((%(((((((((((((((((((((((((#######%%#####((((((((((((###%%#&%(*,.....,.........,...,,,,,,,,
# ..................,.,&%((((((((#(((((((/((#%&&&&&&&%%%&&&&&&&&&&&&%%%&%&%&%%%%%%%&&&&&&%%@,..,.................,..,,,,,,
# .................,,....,,/#&&%#%%((#%&&%&%&&%%%%%%%%%%%%%%%%%%%%%%&&&&&%%%%%%%%%&&&&&%&&%&(,*,,..................,..,,,,
# .............................,,.(&%%%%%&%&%%%&&%%%%%%&&&&@&&%####(%#/%@@@%///////&@&&@@@&(**///&,,.,.................,,,
# ................................,#&%&%%&%%&&&%##((((((((((((((%&&@@&(////*/////(###&@&&%///#(///%/.....................,
# ................................,.&&%#((((((((((((((((((##&@@@%#/*/((#%(/*,&@@@(//*/#&&//#///////&,,...................,
# ................................,%((((((((((((((#%%(/////#%@@@@@@@@@@&,,.,@@@@@&*///*##//&(((////&,,................,,..
# ........,..,...,............,..(%((##&%#(/*/(%%&@@@@//////&@@@@@@@@@%.,,,@@@@@@@*/////*/////#///(#,.....................
# ......,...*@/*##...........,.,.../&@@@@@@@#.,.(@@@@@%#/////%@@@@@@@(,,.*@@@@@@@%///////**//////&*..,....................
# ...........#(///%(..,.............&@@@@@@*,..#@@@@@@//////*//%@@@@*,,.,@@@@@@@@///////#&%%#%%(,.........................
# .......,.,,,,&(/*/&*.,..........,,,&@@@&,.,.(@@@@@@(////////////%/,.,/@@@@@@%/*///////#*.....,,.........................
# ......,....,..*&///(%..,............#@%,.,,#@@@@@@///*(#/*///////////*//////////*////&*......,,.........................
# .......,.,.,#(/*#//*/&,,,.........,...(%,.#@@@@&(//*//*///////////////////////////*#%,......,.,.........................
# .......,,##/((//#/*///%/...............,&///**///////////(@&&&#///////////////*//##/////#((%&(,,........................
# .......,%##/#%((##%(((/((.,..........,.,,&(*///*//////////&&@%&//////////////*/%((((//((%/(((/((%%/,..,.................
# ......,(%//#(*//////////(%....,...........,#&(/////////////(#///////////*/*(%(((((((//(#((((((((((%((&#,.,,.............
# ........,&%/%/*/#/*///*//((,..............,.,,*&&(///////////*/*///////#&#(/((((((((/*(##(((((((##((%///*%%,.,..........
# ..........,&(/////#/*//////&,.,........,,...#&#((/((((#&#(//*//**(&#((/(/#((((((((/((*/(%((((//(#((#/////////&/...,,....
# ............,(%/*////*///////%*........./&#((((%(((((((%((((((##*#(((((##&((((((((((((*(#%(((((&((#///////*/*///#%,.,...
# ...........,,..,&/////////////*%(...,(&###((((((%((((((%((((##%#(%((@&((((//////((%%(((*/(%*%&%((((/*//////////////#%,..
# ................,,%*/////////*//*#@%//(#((##(((((%/(((((((/(((((((%/(((((/,*/((#%&%#%(((//%/,,.,#&(///////////////////&/
# .................,.*%////////*//*///%//*/#((#(((((%((((((((#%@%(,%(%(((((%((((((((%#(#((//(#.,,.,,,./&(/////////////////
# ................,.,..*&//////////////////*(#((%(&/,@(((&(%###&%#(#(#((((((#/*/(##((/(&(*/((&.,........,./&////*/////////
# .....................,.*&///////////**///*//%&/,,..,(%((#/(((((##(##%(((((#((/*//((/*/#((/(&,........,,.,..##*//////////
# ......................,.,,&(/////////////(&*...,.....,&((%(((((((((#(##&&((#(((##%%#(((((((%/................/%/////////
# .......................,..,,#%*///////(&,.,..........,.##(#(((((((((%##(/((((((((((((((((((##.................,,&///////
# ............................,,(%///%&,...............,../&(&%%((((((((%(((((((((((((((((((((#,..................,,&////*
# ............................,.,.,/,,.,....,............,,,&((((((((((((#((((((((((((((((((((&,.....................,@//*

__author__ = "AIShield"
__copyright__ = "Copyright @2023 Bosch Global Software Technologies Private Limited."
__credits__ = "AIShield"
__license__ = "Apache-2.0"
__version__ = "1.0"
__maintainer__ = "AIShield"
__email__ = "AIShield.Contact@bosch.com"
__status__ = "Beta"

from utils import model_inspector_util
from external_files import model_safe_load
import os

def scan(model_path_input):
    """
    Description: This function takes a model file path in pkl, h5, or pb format 
    and checks for unsafe aspects in the given model.

    Input Parameters:
        - model_path_input (str): The path to the model file.

    Return Parameters:
        - output_json (dict): A dictionary containing the following information:
            - 'file_name': The input model file name.
            - 'scanning_reports' (dict): A sub-dictionary containing scanning results.
                - 'tool' (str): The scanning tool used ('unsafe-check-h5', 'unsafe-check-pkl', or 'unsafe-check-pb').
                - 'output_log' (str): The log generated by the scanning tool.
        - scanning_status (bool/str): The scanning status, which is True if successful and an error message (str) if an
        exception occurs during scanning.

    """
    output = {'file_name': model_path_input}
    scanning_status = True
    output["scanning_reports"] = dict()
    
    try:
        tool_wise_report = []
        tool_dict = {}
        if os.path.isfile(model_path_input):
            # pickle scanner dict
            new_tool_dict = {"tool": "picklescan",
                             'output_log': model_inspector_util.scan_pickle_file(path=model_path_input)}
            # add to list
            tool_wise_report.append(new_tool_dict)

        # pickle scanner will do .pkl scanning, hence this one is not needed
        # elif model_path_input.endswith(".pkl"):
        #     tool_dict["tool"] = "unsafe-check-pkl"
        #     tool_dict['output_log'] = model_inspector_util.unsafe_check_pkl(model_path_input)
        # assumption: model path is directory, then it will be a .pb based model

        if model_path_input.endswith(".h5"):
            tool_dict["tool"] = "unsafe-check-h5"
            tool_dict['output_log'] = model_inspector_util.unsafe_check_h5(model_path_input)

        elif model_path_input.endswith(".keras"):
            tool_dict["tool"] = "unsafe-check-keras"
            tool_dict['output_log'] = model_inspector_util.unsafe_check_keras(model_path_input)

        elif model_path_input.endswith(".pb"):
            tool_dict["tool"] = "unsafe-check-pb"
            tool_dict['output_log'] = model_inspector_util.unsafe_check_pb(model_path_input)

        elif model_path_input.endswith(".pt") or model_path_input.endswith(".pth") or model_path_input.endswith(".bin") or model_path_input.endswith(".safetensors"):
            if not model_path_input.endswith(".safetensors"):
                tool_dict["tool"] = "unsafe-check-pt"
            else:
                tool_dict["tool"] = "unsafe-check-safetensors"
                
            tool_dict['output_log'] = model_inspector_util.unsafe_check_pytorch_safetensors(model_path_input)
        
        tool_wise_report.append(tool_dict)
        output["scanning_reports"] = tool_wise_report
    except Exception as e:
        scanning_status = str(e)
        print("{} Error".format(str(e)))
        
    return output, scanning_status
